generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int      @id @default(autoincrement())
  email           String   @unique
  name            String
  mobile          String?  @default("")
  department      String?  @default("")
  position        String?  @default("")
  profileImageUrl String?  @default("")
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  isActive        Boolean  @default(false)
  userRoleId      Int
  userRole        UserRole @relation(fields: [userRoleId], references: [id])
  login           Login?
}

model UserRole {
  id          Int           @id @default(autoincrement())
  name        String
  isDefault   Boolean?      @default(false)
  permissions Permissions[]
  users       User[]
}

model Login {
  id        Int      @id @default(autoincrement())
  password  String
  salt      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int      @unique
  User      User     @relation(fields: [userId], references: [id])
}

model Account {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  crn        String?     @default("")
  deliveryMethod DeliveryMethod? @default(TBD)
  memo       String?     @default("")
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  deletedAt  DateTime?
  contacts   Contact[]
  products   Product[]
  quotes     Quote[]
  workOrders WorkOrder[]
}

model Contact {
  id        Int       @id @default(autoincrement())
  isBase    Boolean?  @default(false)
  title     String
  phone     String?   @default("")
  fax       String?   @default("")
  email     String?   @default("")
  address   String?   @default("")
  memo      String?   @default("")
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?
  accountId Int?
  account   Account?  @relation(fields: [accountId], references: [id])
}

model Quote {
  id               Int       @id @default(autoincrement())
  productName      String?   @default("")
  thickness        Decimal   @db.Decimal(4, 3)
  length           Decimal   @db.Decimal(4, 1)
  width            Decimal   @db.Decimal(4, 1)
  printColorCount  Int?      @default(0)
  variableRate     Int
  printCostPerRoll Int?      @default(8000)
  defectiveRate    Int       @default(8)
  plateRound       Decimal?  @db.Decimal(4, 1)
  plateLength      Decimal?  @db.Decimal(4, 1)
  unitPrice        Decimal   @db.Decimal(4, 1)
  minQuantity      Int
  plateCost        Int?
  plateCount       Int?
  memo             String?   @default("")
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  deletedAt        DateTime?
  accountId        Int
  account          Account   @relation(fields: [accountId], references: [id])
}

model Product {
  id                   Int         @id @default(autoincrement())
  name                 String
  thickness            Decimal     @db.Decimal(4, 3)
  length               Decimal     @db.Decimal(4, 1)
  width                Decimal     @db.Decimal(4, 1)
  extColor             String?     @default("투명")
  extIsAntistatic      Boolean?    @default(false)
  extMemo              String?     @default("") @db.VarChar(255)
  printSide            PrintSide?  @default(NONE)
  printFrontColorCount Int?        @default(0)
  printFrontColor      String?     @default("")
  printFrontPosition   String?     @default("")
  printBackColorCount  Int?        @default(0)
  printBackColor       String?     @default("")
  printBackPosition    String?     @default("")
  printMemo            String?     @default("") @db.VarChar(255)
  cutPosition          String?     @default("")
  cutIsUltrasonic      Boolean?    @default(false)
  cutIsForPowder       Boolean?    @default(false)
  cutPunchCount        Int?        @default(0)
  cutPunchSize         String?     @default("")
  cutPunchPosition     String?     @default("")
  cutMemo              String?     @default("") @db.VarChar(255)
  packMaterial         String?     @default("마대")
  packUnit             Int?        @default(0)
  packCanDeliverAll    Boolean?    @default(false)
  packMemo             String?     @default("") @db.VarChar(255)
  productMemo          String?     @default("") @db.VarChar(255)
  shouldKeepRemainder  Boolean     @default(false)
  deliveryMethod       DeliveryMethod  @default(TBD)
  createdAt            DateTime    @default(now())
  updatedAt            DateTime    @updatedAt
  deletedAt            DateTime?
  accountId            Int?
  account              Account?    @relation(fields: [accountId], references: [id])
  deliveries           Delivery[]
  images               Image[]
  stock                Stock?
  workOrders           WorkOrder[]
  plates               Plate[]
}

model Image {
  id        Int      @id @default(autoincrement())
  fileName  String
  imageUrl  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])
}

model Stock {
  id        Int            @id @default(autoincrement())
  balance   Int
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  productId Int            @unique
  product   Product        @relation(fields: [productId], references: [id])
  history   StockHistory[]
}

model StockHistory {
  id        Int              @id @default(autoincrement())
  type      StockHistoryType
  quantity  Int
  balance   Int
  stockId   Int
  createdAt DateTime         @default(now())
  stock     Stock            @relation(fields: [stockId], references: [id])
}

model Plate {
  id        Int           @id @default(autoincrement())
  round     Decimal       @db.Decimal(4, 1)
  length    Decimal       @db.Decimal(4, 1)
  name      String?       @default("")
  material  PlateMaterial @default(STEEL)
  location  String?       @default("")
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  deletedAt DateTime?
  memo      String?       @default("") @db.VarChar(255)
  code      Int?
  products  Product[]
}

model WorkOrderSeq {
  id  String @id
  seq Int    @default(0)
}

model WorkOrder {
  id                String          @id
  orderedAt         DateTime        @default(now())
  orderUpdatedAt    DateTime        @updatedAt
  deliverBy         DateTime
  orderQuantity     Int
  isUrgent          Boolean         @default(false)
  shouldBePunctual  Boolean         @default(false)
  shouldKeepRemainder  Boolean         @default(false)
  plateStatus       PlateStatus     @default(CONFIRM)
  isPlateReady      Boolean         @default(false)
  deliveryMethod    DeliveryMethod  @default(TBD)
  workMemo          String?         @default("") @db.VarChar(255)
  deliveryMemo      String?         @default("") @db.VarChar(255)
  workOrderStatus   WorkOrderStatus @default(NOT_STARTED)
  completedAt       DateTime?
  completedQuantity Int?
  cuttingMachine    String?         @default("") @db.VarChar(255)
  deliveredAt       DateTime?
  deliveredQuantity Int?
  accountId         Int
  productId         Int
  account           Account         @relation(fields: [accountId], references: [id])
  product           Product         @relation(fields: [productId], references: [id])
  delivery          Delivery?
}

model Delivery {
  id          Int            @id @default(autoincrement())
  date        DateTime
  method      DeliveryMethod
  isDelivered Boolean        @default(false)
  memo        String?        @default("") @db.VarChar(255)
  productId   Int
  workOrderId String?        @unique
  quantity    Int
  product     Product        @relation(fields: [productId], references: [id])
  workOrder   WorkOrder?     @relation(fields: [workOrderId], references: [id])
}

enum Permissions {
  ACCOUNT_READ
  ACCOUNT_CREATE
  ACCOUNT_UPDATE
  ACCOUNT_DELETE
  QUOTE_READ
  QUOTE_CREATE
  QUOTE_UPDATE
  QUOTE_DELETE
  PRODUCT_READ
  PRODUCT_CREATE
  PRODUCT_UPDATE
  PRODUCT_DELETE
  PLATE_READ
  PLATE_CREATE
  PLATE_UPDATE
  PLATE_DELETE
  WORK_ORDER_READ
  WORK_ORDER_CREATE
  WORK_ORDER_UPDATE
  WORK_ORDER_DELETE
  DELIVERY_READ
  DELIVERY_CREATE
  DELIVERY_UPDATE
  DELIVERY_DELETE
  USER_READ
  USER_CREATE
  USER_UPDATE
  USER_DELETE
}

enum PrintSide {
  NONE
  SINGLE
  DOUBLE
}

enum PlateMaterial {
  BRASS
  STEEL
}

enum PlateStatus {
  NEW
  UPDATE
  CONFIRM
}

enum DeliveryMethod {
  TBD
  COURIER
  DIRECT
  EXPRESS
}

enum WorkOrderStatus {
  NOT_STARTED
  EXTRUDING
  PRINTING
  CUTTING
  COMPLETED
}

enum StockHistoryType {
  CREATED
  MANUFACTURED
  DELIVERED
  DISPOSAL
  STOCKTAKING
}
